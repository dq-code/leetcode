1. two pointer search, searching from both start and end
   hashmap
   python copy list, a = list(b)
2. linkedlist, always create pivot
   inverse: walker = pivot
   reverse: always set as walking as pivot.next
3. use hashmap to record the location of already existed charactor, once repeatation found, starting from last occurance +1
4. IMPORTANT
5. Palindrome search, from middle to both left and right direction
6.
7. largest integer in python, sys.maxint
9. IMPORTANT
   div = 1
   while x/div >= 10:
    div = div*10
10. IMPORTANT
15. Think about sort first, combine hashmap and two pointer search; in order to use two pointer search, list has to be sorted first
17. DFS
19. IMPORTANT, tricky, two pointer for linked list
22. DFS
25. Reverse linked list
28. IMPORTANT
32. IMPORTANT
37. how to decide whether the fill-in number is valid in this 3*3 subgroup is the key
